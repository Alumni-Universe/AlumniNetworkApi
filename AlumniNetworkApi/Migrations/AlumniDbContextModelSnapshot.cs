// <auto-generated />
using System;
using AlumniNetworkApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlumniNetworkApi.Migrations
{
    [DbContext(typeof(AlumniDbContext))]
    partial class AlumniDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlumniNetworkApi.Models.AlumniGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit")
                        .HasColumnName("is_private");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("GroupId")
                        .HasName("PK__AlumniGr__D57795A029A768D7");

                    b.HasIndex("CreatedBy");

                    b.ToTable("AlumniGroup", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.AlumniUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<string>("FunFact")
                        .HasColumnType("text")
                        .HasColumnName("fun_fact");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("picture");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("UserId")
                        .HasName("PK__AlumniUs__B9BE370FB48C207B");

                    b.ToTable("AlumniUser", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<bool>("AllowGuests")
                        .HasColumnType("bit")
                        .HasColumnName("allow_guests");

                    b.Property<string>("BannerImg")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("banner_img");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.HasKey("EventId")
                        .HasName("PK__Event__2370F727C1FB703A");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated");

                    b.Property<string>("PostMessage")
                        .HasColumnType("text")
                        .HasColumnName("post_message");

                    b.Property<string>("PostTarget")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("post_target");

                    b.Property<int>("ReplyParentId")
                        .HasColumnType("int")
                        .HasColumnName("reply_parent_id");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<int?>("TargetEvent")
                        .HasColumnType("int")
                        .HasColumnName("target_event");

                    b.Property<int?>("TargetGroup")
                        .HasColumnType("int")
                        .HasColumnName("target_group");

                    b.Property<int?>("TargetTopic")
                        .HasColumnType("int")
                        .HasColumnName("target_topic");

                    b.Property<int?>("TargetUser")
                        .HasColumnType("int")
                        .HasColumnName("target_user");

                    b.HasKey("PostId")
                        .HasName("PK__Post__3ED7876664865E6C");

                    b.HasIndex("ReplyParentId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TargetEvent");

                    b.HasIndex("TargetGroup");

                    b.HasIndex("TargetTopic");

                    b.HasIndex("TargetUser");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Rsvp", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int")
                        .HasColumnName("guest_count");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated");

                    b.HasKey("UserId", "EventId")
                        .HasName("PK__RSVP__DB89387D413DA912");

                    b.HasIndex("EventId");

                    b.ToTable("RSVP", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("TopicId")
                        .HasName("PK__Topic__D5DAA3E99DC2689F");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("EventGroupInvite", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.HasKey("EventId", "GroupId")
                        .HasName("PK__EventGro__3E278E7D001DEEA7");

                    b.HasIndex("GroupId");

                    b.ToTable("EventGroupInvite", (string)null);
                });

            modelBuilder.Entity("EventTopicInvite", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    b.HasKey("EventId", "TopicId")
                        .HasName("PK__EventTop__AE2D5D19BF8C0416");

                    b.HasIndex("TopicId");

                    b.ToTable("EventTopicInvite", (string)null);
                });

            modelBuilder.Entity("EventUserInvite", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("EventId", "UserId")
                        .HasName("PK__EventUse__C8EB14572252FAAC");

                    b.HasIndex("UserId");

                    b.ToTable("EventUserInvite", (string)null);
                });

            modelBuilder.Entity("GroupMember", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.HasKey("UserId", "GroupId")
                        .HasName("PK__GroupMem__A4E94E551A5715B1");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupMember", (string)null);
                });

            modelBuilder.Entity("TopicMember", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    b.HasKey("UserId", "TopicId")
                        .HasName("PK__TopicMem__34E39D3103B88F96");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicMember", (string)null);
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.AlumniGroup", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", "CreatedByNavigation")
                        .WithMany("AlumniGroups")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__AlumniGro__creat__4BAC3F29");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Event", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", "CreatedByNavigation")
                        .WithMany("Events")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Event__created_b__5070F446");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Post", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Post", "ReplyParent")
                        .WithMany("InverseReplyParent")
                        .HasForeignKey("ReplyParentId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__reply_pare__6383C8BA");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", "Sender")
                        .WithMany("PostSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__sender_id__628FA481");

                    b.HasOne("AlumniNetworkApi.Models.Event", "TargetEventNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("TargetEvent")
                        .HasConstraintName("FK__Post__target_eve__6754599E");

                    b.HasOne("AlumniNetworkApi.Models.AlumniGroup", "TargetGroupNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("TargetGroup")
                        .HasConstraintName("FK__Post__target_gro__656C112C");

                    b.HasOne("AlumniNetworkApi.Models.Topic", "TargetTopicNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("TargetTopic")
                        .HasConstraintName("FK__Post__target_top__66603565");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", "TargetUserNavigation")
                        .WithMany("PostTargetUserNavigations")
                        .HasForeignKey("TargetUser")
                        .HasConstraintName("FK__Post__target_use__6477ECF3");

                    b.Navigation("ReplyParent");

                    b.Navigation("Sender");

                    b.Navigation("TargetEventNavigation");

                    b.Navigation("TargetGroupNavigation");

                    b.Navigation("TargetTopicNavigation");

                    b.Navigation("TargetUserNavigation");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Rsvp", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Event", "Event")
                        .WithMany("Rsvps")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__RSVP__event_id__5FB337D6");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", "User")
                        .WithMany("Rsvps")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__RSVP__user_id__5EBF139D");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGroupInvite", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventGrou__event__5AEE82B9");

                    b.HasOne("AlumniNetworkApi.Models.AlumniGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__EventGrou__group__5BE2A6F2");
                });

            modelBuilder.Entity("EventTopicInvite", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventTopi__event__6A30C649");

                    b.HasOne("AlumniNetworkApi.Models.Topic", null)
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK__EventTopi__topic__6B24EA82");
                });

            modelBuilder.Entity("EventUserInvite", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventUser__event__571DF1D5");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__EventUser__user___5812160E");
                });

            modelBuilder.Entity("GroupMember", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.AlumniGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__group__5441852A");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__user___534D60F1");
                });

            modelBuilder.Entity("TopicMember", b =>
                {
                    b.HasOne("AlumniNetworkApi.Models.Topic", null)
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK__TopicMemb__topic__6EF57B66");

                    b.HasOne("AlumniNetworkApi.Models.AlumniUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TopicMemb__user___6E01572D");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.AlumniGroup", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.AlumniUser", b =>
                {
                    b.Navigation("AlumniGroups");

                    b.Navigation("Events");

                    b.Navigation("PostSenders");

                    b.Navigation("PostTargetUserNavigations");

                    b.Navigation("Rsvps");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Event", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Rsvps");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Post", b =>
                {
                    b.Navigation("InverseReplyParent");
                });

            modelBuilder.Entity("AlumniNetworkApi.Models.Topic", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
